/**
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * @author Vadim Kisen
 *
 * copyright 2010 by uTest 
 */
set foreign_key_checks = 0;

-- 
-- default user with System Admin account: email:admin@utest.com password: admin
--
DROP TABLE IF EXISTS AccessRole;
CREATE TABLE AccessRole ( accessRoleId INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, sortOrder INT DEFAULT '0' NOT NULL, companyId INT NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (accessRoleId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into AccessRole (accessRoleId, name, sortOrder, companyId, createdBy, createDate, lastChangedBy, lastChangeDate, version) values (1, 'System Admin', 0, -22222, 1, '2010-10-19 00:00:00', 1, '2010-10-19 00:00:00', 0);
insert into AccessRole (accessRoleId, name, sortOrder, companyId, createdBy, createDate, lastChangedBy, lastChangeDate, version) values (2, 'Testing Manager', 0, -22222, 1, '2010-10-19 00:00:00', 1, '2010-10-19 00:00:00', 0);
insert into AccessRole (accessRoleId, name, sortOrder, companyId, createdBy, createDate, lastChangedBy, lastChangeDate, version) values (3, 'Tester', 0, -22222, 1, '2010-10-19 00:00:00', 1, '2010-10-19 00:00:00', 0);
insert into AccessRole (accessRoleId, name, sortOrder, companyId, createdBy, createDate, lastChangedBy, lastChangeDate, version) values (4, 'Testing Manager Admin', 0, -22222, 1, '2010-10-19 00:00:00', 1, '2010-10-19 00:00:00', 0);
insert into AccessRole (accessRoleId, name, sortOrder, companyId, createdBy, createDate, lastChangedBy, lastChangeDate, version) values (5, 'New user role with permissions: 3,4,5', 0, 9, 1, '2010-11-24 20:24:25', 1, '2010-11-24 20:24:25', 0);
DROP TABLE IF EXISTS ApprovalStatus;
CREATE TABLE ApprovalStatus ( approvalStatusId INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (approvalStatusId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into ApprovalStatus (approvalStatusId) values (1);
insert into ApprovalStatus (approvalStatusId) values (2);
insert into ApprovalStatus (approvalStatusId) values (3);
DROP TABLE IF EXISTS ApprovalStatusLocale;
CREATE TABLE ApprovalStatusLocale ( approvalStatusId INT NOT NULL AUTO_INCREMENT, description VARCHAR(50) NOT NULL, sortOrder INT NOT NULL, localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, PRIMARY KEY (approvalStatusId, localeCode), CONSTRAINT FK_ApprovalStatus_ID FOREIGN KEY (approvalStatusId) REFERENCES ApprovalStatus (approvalStatusId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into ApprovalStatusLocale (approvalStatusId, description, sortOrder, localeCode) values (1, 'Pending', 0, 'en_US');
insert into ApprovalStatusLocale (approvalStatusId, description, sortOrder, localeCode) values (2, 'Approved', 0, 'en_US');
insert into ApprovalStatusLocale (approvalStatusId, description, sortOrder, localeCode) values (3, 'Rejected', 0, 'en_US');
DROP TABLE IF EXISTS Attachment;
CREATE TABLE Attachment ( attachmentId INT NOT NULL COMMENT 'Sequential ID.', fileName VARCHAR(50) NOT NULL COMMENT 'Name of the file.', fileType VARCHAR(45) NOT NULL COMMENT 'File extension.', fileSizeInMB INT NOT NULL COMMENT 'File size.', storageURL VARCHAR(255) COMMENT 'Optional stoprage URL.', entityId VARCHAR(45) COMMENT 'ProductId, TestCaseId, TestRunId', entityTypeId INT NOT NULL COMMENT 'Product, TestCase, TestRun, etc.', createdBy INT NOT NULL, createDate DATETIME NOT NULL, PRIMARY KEY (attachmentId), CONSTRAINT fk_Attachment_DocumentType1 FOREIGN KEY (entityTypeId) REFERENCES EntityType (entityTypeId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_Attachment_DocumentType1 (entityTypeId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='environment rules required to execute the Test Case.';
DROP TABLE IF EXISTS AttachmentTestCaseVersion;
CREATE TABLE AttachmentTestCaseVersion ( attachmentTestCaseVersionId INT NOT NULL AUTO_INCREMENT, attachmentId INT NOT NULL, testCaseVersionId INT NOT NULL, PRIMARY KEY (attachmentTestCaseVersionId), CONSTRAINT fk_AttachmentTestCaseVersion_Attachment1 FOREIGN KEY (attachmentId) REFERENCES Attachment (attachmentId) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_AttachmentTestCaseVersion_TestCaseVersion1 FOREIGN KEY (testCaseVersionId) REFERENCES TestCaseVersion (testCaseVersionId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_AttachmentTestCaseVersion_Attachment1 (attachmentId), INDEX fk_AttachmentTestCaseVersion_TestCaseVersion1 (testCaseVersionId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Associates attachment to specific versions of test case.';
DROP TABLE IF EXISTS Company;
CREATE TABLE Company ( companyId INT NOT NULL AUTO_INCREMENT, name VARCHAR(50) NOT NULL, phone VARCHAR(50), address VARCHAR(50), city VARCHAR(50), zip VARCHAR(50), url VARCHAR(100), countryId INT(50), createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (companyId), INDEX FK_Company_Country (countryId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS Country;
CREATE TABLE Country ( countryId INT NOT NULL, region CHAR(2), countryCode CHAR(2), PRIMARY KEY (countryId), INDEX idx_region (region) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into Country (countryId, region, countryCode) values (1, 'EU', 'XX');
insert into Country (countryId, region, countryCode) values (2, 'AF', 'DZ');
insert into Country (countryId, region, countryCode) values (3, 'OC', 'AS');
insert into Country (countryId, region, countryCode) values (4, 'EU', 'AD');
insert into Country (countryId, region, countryCode) values (5, 'AF', 'AO');
insert into Country (countryId, region, countryCode) values (6, 'NA', 'AI');
insert into Country (countryId, region, countryCode) values (8, 'NA', 'AG');
insert into Country (countryId, region, countryCode) values (9, 'SA', 'AR');
insert into Country (countryId, region, countryCode) values (10, 'AS', 'AM');
insert into Country (countryId, region, countryCode) values (11, 'NA', 'AW');
insert into Country (countryId, region, countryCode) values (12, 'OC', 'AU');
insert into Country (countryId, region, countryCode) values (13, 'EU', 'AT');
insert into Country (countryId, region, countryCode) values (14, 'AS', 'AZ');
insert into Country (countryId, region, countryCode) values (15, 'NA', 'BS');
insert into Country (countryId, region, countryCode) values (16, 'AS', 'BH');
insert into Country (countryId, region, countryCode) values (17, 'AS', 'BD');
insert into Country (countryId, region, countryCode) values (18, 'NA', 'BB');
insert into Country (countryId, region, countryCode) values (19, 'EU', 'BY');
insert into Country (countryId, region, countryCode) values (20, 'EU', 'BE');
insert into Country (countryId, region, countryCode) values (21, 'NA', 'BZ');
insert into Country (countryId, region, countryCode) values (22, 'AF', 'BJ');
insert into Country (countryId, region, countryCode) values (23, 'NA', 'BM');
insert into Country (countryId, region, countryCode) values (24, 'AS', 'BT');
insert into Country (countryId, region, countryCode) values (25, 'SA', 'BO');
insert into Country (countryId, region, countryCode) values (26, 'EU', 'BA');
insert into Country (countryId, region, countryCode) values (27, 'AF', 'BW');
insert into Country (countryId, region, countryCode) values (29, 'SA', 'BR');
insert into Country (countryId, region, countryCode) values (30, 'AS', 'IO');
insert into Country (countryId, region, countryCode) values (31, 'AS', 'BN');
insert into Country (countryId, region, countryCode) values (32, 'EU', 'BG');
insert into Country (countryId, region, countryCode) values (33, 'AF', 'BF');
insert into Country (countryId, region, countryCode) values (34, 'AF', 'BI');
insert into Country (countryId, region, countryCode) values (35, 'AS', 'KH');
insert into Country (countryId, region, countryCode) values (36, 'AF', 'CM');
insert into Country (countryId, region, countryCode) values (37, 'NA', 'CA');
insert into Country (countryId, region, countryCode) values (38, 'AF', 'CV');
insert into Country (countryId, region, countryCode) values (39, 'NA', 'KY');
insert into Country (countryId, region, countryCode) values (40, 'AF', 'CF');
insert into Country (countryId, region, countryCode) values (41, 'AF', 'TD');
insert into Country (countryId, region, countryCode) values (42, 'SA', 'CL');
insert into Country (countryId, region, countryCode) values (43, 'AS', 'CN');
insert into Country (countryId, region, countryCode) values (44, 'AS', 'CX');
insert into Country (countryId, region, countryCode) values (45, 'AS', 'CC');
insert into Country (countryId, region, countryCode) values (46, 'SA', 'CO');
insert into Country (countryId, region, countryCode) values (47, 'AF', 'KM');
insert into Country (countryId, region, countryCode) values (48, 'AF', 'CG');
insert into Country (countryId, region, countryCode) values (49, 'AF', 'CG');
insert into Country (countryId, region, countryCode) values (50, 'OC', 'CK');
insert into Country (countryId, region, countryCode) values (51, 'NA', 'CR');
insert into Country (countryId, region, countryCode) values (52, 'AF', 'CI');
insert into Country (countryId, region, countryCode) values (53, 'EU', 'HR');
insert into Country (countryId, region, countryCode) values (54, 'NA', 'CU');
insert into Country (countryId, region, countryCode) values (55, 'AS', 'CY');
insert into Country (countryId, region, countryCode) values (56, 'EU', 'CZ');
insert into Country (countryId, region, countryCode) values (57, 'EU', 'DK');
insert into Country (countryId, region, countryCode) values (58, 'AF', 'DJ');
insert into Country (countryId, region, countryCode) values (59, 'NA', 'DM');
insert into Country (countryId, region, countryCode) values (60, 'NA', 'DO');
insert into Country (countryId, region, countryCode) values (61, 'SA', 'EC');
insert into Country (countryId, region, countryCode) values (66, 'AF', 'EG');
insert into Country (countryId, region, countryCode) values (67, 'NA', 'SV');
insert into Country (countryId, region, countryCode) values (68, 'AF', 'GQ');
insert into Country (countryId, region, countryCode) values (69, 'AF', 'ER');
insert into Country (countryId, region, countryCode) values (80, 'EU', 'EE');
insert into Country (countryId, region, countryCode) values (81, 'AF', 'ET');
insert into Country (countryId, region, countryCode) values (82, 'SA', 'FK');
insert into Country (countryId, region, countryCode) values (83, 'EU', 'FO');
insert into Country (countryId, region, countryCode) values (84, 'OC', 'FJ');
insert into Country (countryId, region, countryCode) values (85, 'EU', 'FI');
insert into Country (countryId, region, countryCode) values (86, 'EU', 'FR');
insert into Country (countryId, region, countryCode) values (87, 'SA', 'GF');
insert into Country (countryId, region, countryCode) values (88, 'OC', 'PF');
insert into Country (countryId, region, countryCode) values (90, 'AF', 'GA');
insert into Country (countryId, region, countryCode) values (91, 'AF', 'GM');
insert into Country (countryId, region, countryCode) values (92, 'AS', 'GE');
insert into Country (countryId, region, countryCode) values (93, 'EU', 'DE');
insert into Country (countryId, region, countryCode) values (94, 'AF', 'GH');
insert into Country (countryId, region, countryCode) values (95, 'EU', 'GI');
insert into Country (countryId, region, countryCode) values (96, 'EU', 'GR');
insert into Country (countryId, region, countryCode) values (97, 'NA', 'GL');
insert into Country (countryId, region, countryCode) values (98, 'NA', 'GD');
insert into Country (countryId, region, countryCode) values (99, 'NA', 'GP');
insert into Country (countryId, region, countryCode) values (100, 'OC', 'GU');
insert into Country (countryId, region, countryCode) values (101, 'NA', 'GT');
insert into Country (countryId, region, countryCode) values (102, 'AF', 'GN');
insert into Country (countryId, region, countryCode) values (103, 'AF', 'GW');
insert into Country (countryId, region, countryCode) values (104, 'SA', 'GY');
insert into Country (countryId, region, countryCode) values (105, 'NA', 'HT');
insert into Country (countryId, region, countryCode) values (106, 'OC', 'HM');
insert into Country (countryId, region, countryCode) values (107, 'EU', 'VA');
insert into Country (countryId, region, countryCode) values (108, 'NA', 'HN');
insert into Country (countryId, region, countryCode) values (109, 'AS', 'HK');
insert into Country (countryId, region, countryCode) values (110, 'EU', 'HU');
insert into Country (countryId, region, countryCode) values (111, 'EU', 'IS');
insert into Country (countryId, region, countryCode) values (112, 'AS', 'IN');
insert into Country (countryId, region, countryCode) values (113, 'AS', 'ID');
insert into Country (countryId, region, countryCode) values (114, 'AS', 'IR');
insert into Country (countryId, region, countryCode) values (115, 'AS', 'IQ');
insert into Country (countryId, region, countryCode) values (116, 'EU', 'IE');
insert into Country (countryId, region, countryCode) values (117, 'AS', 'IL');
insert into Country (countryId, region, countryCode) values (118, 'EU', 'IT');
insert into Country (countryId, region, countryCode) values (119, 'NA', 'JM');
insert into Country (countryId, region, countryCode) values (120, 'AS', 'JP');
insert into Country (countryId, region, countryCode) values (121, 'AS', 'JO');
insert into Country (countryId, region, countryCode) values (122, 'AS', 'KZ');
insert into Country (countryId, region, countryCode) values (123, 'AF', 'KE');
insert into Country (countryId, region, countryCode) values (124, 'OC', 'KI');
insert into Country (countryId, region, countryCode) values (125, 'AS', 'KP');
insert into Country (countryId, region, countryCode) values (126, 'AS', 'KR');
insert into Country (countryId, region, countryCode) values (127, 'AS', 'KW');
insert into Country (countryId, region, countryCode) values (128, 'AS', 'KG');
insert into Country (countryId, region, countryCode) values (129, 'AS', 'LA');
insert into Country (countryId, region, countryCode) values (130, 'EU', 'LV');
insert into Country (countryId, region, countryCode) values (131, 'AS', 'LB');
insert into Country (countryId, region, countryCode) values (132, 'AF', 'LS');
insert into Country (countryId, region, countryCode) values (133, 'AF', 'LR');
insert into Country (countryId, region, countryCode) values (134, 'AF', 'LY');
insert into Country (countryId, region, countryCode) values (135, 'EU', 'LI');
insert into Country (countryId, region, countryCode) values (136, 'EU', 'LT');
insert into Country (countryId, region, countryCode) values (137, 'EU', 'LU');
insert into Country (countryId, region, countryCode) values (138, 'AS', 'MO');
insert into Country (countryId, region, countryCode) values (139, 'EU', 'MK');
insert into Country (countryId, region, countryCode) values (140, 'AF', 'MG');
insert into Country (countryId, region, countryCode) values (141, 'AF', 'MW');
insert into Country (countryId, region, countryCode) values (142, 'SA', 'MY');
insert into Country (countryId, region, countryCode) values (143, 'AS', 'MV');
insert into Country (countryId, region, countryCode) values (144, 'AF', 'ML');
insert into Country (countryId, region, countryCode) values (145, 'EU', 'MT');
insert into Country (countryId, region, countryCode) values (146, 'OC', 'MH');
insert into Country (countryId, region, countryCode) values (147, 'NA', 'MQ');
insert into Country (countryId, region, countryCode) values (148, 'AF', 'MR');
insert into Country (countryId, region, countryCode) values (149, 'AF', 'MU');
insert into Country (countryId, region, countryCode) values (150, 'AF', 'YT');
insert into Country (countryId, region, countryCode) values (151, 'NA', 'MX');
insert into Country (countryId, region, countryCode) values (152, 'SA', 'FM');
insert into Country (countryId, region, countryCode) values (153, 'EU', 'MD');
insert into Country (countryId, region, countryCode) values (154, 'EU', 'MC');
insert into Country (countryId, region, countryCode) values (155, 'AS', 'MN');
insert into Country (countryId, region, countryCode) values (156, 'NA', 'MS');
insert into Country (countryId, region, countryCode) values (157, 'AF', 'MA');
insert into Country (countryId, region, countryCode) values (158, 'AF', 'MZ');
insert into Country (countryId, region, countryCode) values (159, 'AS', 'MM');
insert into Country (countryId, region, countryCode) values (160, 'AF', 'NA');
insert into Country (countryId, region, countryCode) values (161, 'OC', 'NR');
insert into Country (countryId, region, countryCode) values (162, 'AS', 'NP');
insert into Country (countryId, region, countryCode) values (163, 'EU', 'NL');
insert into Country (countryId, region, countryCode) values (164, 'NA', 'AN');
insert into Country (countryId, region, countryCode) values (165, 'OC', 'NC');
insert into Country (countryId, region, countryCode) values (166, 'OC', 'NZ');
insert into Country (countryId, region, countryCode) values (167, 'NA', 'NI');
insert into Country (countryId, region, countryCode) values (168, 'AF', 'NE');
insert into Country (countryId, region, countryCode) values (169, 'AF', 'NG');
insert into Country (countryId, region, countryCode) values (170, 'OC', 'NU');
insert into Country (countryId, region, countryCode) values (171, 'OC', 'NF');
insert into Country (countryId, region, countryCode) values (172, 'OC', 'MP');
insert into Country (countryId, region, countryCode) values (173, 'EU', 'NO');
insert into Country (countryId, region, countryCode) values (174, 'AS', 'OM');
insert into Country (countryId, region, countryCode) values (175, 'AS', 'PK');
insert into Country (countryId, region, countryCode) values (176, 'OC', 'PW');
insert into Country (countryId, region, countryCode) values (177, 'AS', 'PS');
insert into Country (countryId, region, countryCode) values (178, 'NA', 'PA');
insert into Country (countryId, region, countryCode) values (179, 'OC', 'PG');
insert into Country (countryId, region, countryCode) values (180, 'SA', 'PY');
insert into Country (countryId, region, countryCode) values (181, 'SA', 'PE');
insert into Country (countryId, region, countryCode) values (182, 'AS', 'PH');
insert into Country (countryId, region, countryCode) values (184, 'EU', 'PL');
insert into Country (countryId, region, countryCode) values (185, 'EU', 'PT');
insert into Country (countryId, region, countryCode) values (186, 'NA', 'PR');
insert into Country (countryId, region, countryCode) values (187, 'AS', 'QA');
insert into Country (countryId, region, countryCode) values (189, 'EU', 'RO');
insert into Country (countryId, region, countryCode) values (190, 'AS', 'RU');
insert into Country (countryId, region, countryCode) values (191, 'AF', 'RW');
insert into Country (countryId, region, countryCode) values (192, 'AF', 'SH');
insert into Country (countryId, region, countryCode) values (193, 'NA', 'KN');
insert into Country (countryId, region, countryCode) values (194, 'NA', 'LC');
insert into Country (countryId, region, countryCode) values (195, 'NA', 'PM');
insert into Country (countryId, region, countryCode) values (196, 'NA', 'VC');
insert into Country (countryId, region, countryCode) values (197, 'OC', 'WS');
insert into Country (countryId, region, countryCode) values (198, 'EU', 'SM');
insert into Country (countryId, region, countryCode) values (199, 'AF', 'ST');
insert into Country (countryId, region, countryCode) values (200, 'AS', 'SA');
insert into Country (countryId, region, countryCode) values (201, 'AF', 'SN');
insert into Country (countryId, region, countryCode) values (202, 'EU', 'CS');
insert into Country (countryId, region, countryCode) values (203, 'AF', 'SC');
insert into Country (countryId, region, countryCode) values (204, 'AF', 'SL');
insert into Country (countryId, region, countryCode) values (205, 'AS', 'SG');
insert into Country (countryId, region, countryCode) values (206, 'EU', 'SK');
insert into Country (countryId, region, countryCode) values (207, 'EU', 'SI');
insert into Country (countryId, region, countryCode) values (208, 'OC', 'SB');
insert into Country (countryId, region, countryCode) values (209, 'AF', 'SO');
insert into Country (countryId, region, countryCode) values (210, 'AF', 'ZA');
insert into Country (countryId, region, countryCode) values (211, 'SA', 'GS');
insert into Country (countryId, region, countryCode) values (212, 'EU', 'ES');
insert into Country (countryId, region, countryCode) values (213, 'AS', 'LK');
insert into Country (countryId, region, countryCode) values (214, 'AF', 'SD');
insert into Country (countryId, region, countryCode) values (215, 'SA', 'SR');
insert into Country (countryId, region, countryCode) values (216, 'EU', 'SJ');
insert into Country (countryId, region, countryCode) values (217, 'AF', 'SZ');
insert into Country (countryId, region, countryCode) values (218, 'EU', 'SE');
insert into Country (countryId, region, countryCode) values (219, 'EU', 'CH');
insert into Country (countryId, region, countryCode) values (220, 'AS', 'SY');
insert into Country (countryId, region, countryCode) values (221, 'AS', 'TW');
insert into Country (countryId, region, countryCode) values (222, 'AS', 'TJ');
insert into Country (countryId, region, countryCode) values (223, 'AF', 'TZ');
insert into Country (countryId, region, countryCode) values (224, 'AS', 'TH');
insert into Country (countryId, region, countryCode) values (225, 'AS', 'TL');
insert into Country (countryId, region, countryCode) values (226, 'AF', 'TG');
insert into Country (countryId, region, countryCode) values (227, 'OC', 'TK');
insert into Country (countryId, region, countryCode) values (228, 'OC', 'TO');
insert into Country (countryId, region, countryCode) values (229, 'NA', 'TT');
insert into Country (countryId, region, countryCode) values (230, 'AF', 'TN');
insert into Country (countryId, region, countryCode) values (231, 'AS', 'TR');
insert into Country (countryId, region, countryCode) values (232, 'AS', 'TM');
insert into Country (countryId, region, countryCode) values (233, 'NA', 'TC');
insert into Country (countryId, region, countryCode) values (234, 'OC', 'TV');
insert into Country (countryId, region, countryCode) values (235, 'AF', 'UG');
insert into Country (countryId, region, countryCode) values (236, 'EU', 'UA');
insert into Country (countryId, region, countryCode) values (237, 'AS', 'AE');
insert into Country (countryId, region, countryCode) values (238, 'EU', 'GB');
insert into Country (countryId, region, countryCode) values (239, 'NA', 'US');
insert into Country (countryId, region, countryCode) values (240, 'NA', 'UM');
insert into Country (countryId, region, countryCode) values (241, 'SA', 'UY');
insert into Country (countryId, region, countryCode) values (242, 'AS', 'UZ');
insert into Country (countryId, region, countryCode) values (243, 'OC', 'VU');
insert into Country (countryId, region, countryCode) values (244, 'SA', 'VE');
insert into Country (countryId, region, countryCode) values (245, 'AS', 'VN');
insert into Country (countryId, region, countryCode) values (246, 'NA', 'VG');
insert into Country (countryId, region, countryCode) values (247, 'NA', 'VI');
insert into Country (countryId, region, countryCode) values (248, 'OC', 'WF');
insert into Country (countryId, region, countryCode) values (249, 'AF', 'EH');
insert into Country (countryId, region, countryCode) values (250, 'AS', 'YE');
insert into Country (countryId, region, countryCode) values (251, 'AF', 'ZM');
insert into Country (countryId, region, countryCode) values (252, 'AF', 'ZW');
insert into Country (countryId, region, countryCode) values (253, 'EU', 'XX');
insert into Country (countryId, region, countryCode) values (254, 'EU', 'XX');
insert into Country (countryId, region, countryCode) values (256, 'AS', 'AF');
DROP TABLE IF EXISTS CountryLocale;
CREATE TABLE CountryLocale ( countryId INT NOT NULL AUTO_INCREMENT, description VARCHAR(250) NOT NULL, sortOrder VARCHAR(250), localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, regionId INT DEFAULT '1' NOT NULL, PRIMARY KEY (countryId, localeCode), CONSTRAINT FK_Country_Id FOREIGN KEY (countryId) REFERENCES Country (countryId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (1, 'Albania', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (2, 'Algeria', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (3, 'American Samoa', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (4, 'Andorra', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (5, 'Angola', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (6, 'Anguilla', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (8, 'Antigua and Barbuda', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (9, 'Argentina', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (10, 'Armenia', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (11, 'Aruba', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (12, 'Australia', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (13, 'Austria', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (14, 'Azerbaijan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (15, 'Bahamas', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (16, 'Bahrain', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (17, 'Bangladesh', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (18, 'Barbados', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (19, 'Belarus', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (20, 'Belgium', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (21, 'Belize', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (22, 'Benin', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (23, 'Bermuda', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (24, 'Bhutan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (25, 'Bolivia', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (26, 'Bosnia and Herzegovina', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (27, 'Botswana', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (29, 'Brazil', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (30, 'British Indian Ocean Territory', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (31, 'Brunei Darussalam', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (32, 'Bulgaria', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (33, 'Burkina Faso', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (34, 'Burundi', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (35, 'Cambodia', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (36, 'Cameroon', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (37, 'Canada', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (38, 'Cape Verde', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (39, 'Cayman Islands', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (40, 'Central African Republic', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (41, 'Chad', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (42, 'Chile', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (43, 'China', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (44, 'Christmas Island', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (45, 'Cocos (Keeling) Islands', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (46, 'Colombia', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (47, 'Comoros', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (48, 'Congo', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (49, 'Congo, the Democratic Republic of the', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (50, 'Cook Islands', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (51, 'Costa Rica', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (52, 'Cote D''Ivoire', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (53, 'Croatia', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (54, 'Cuba', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (55, 'Cyprus', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (56, 'Czech Republic', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (57, 'Denmark', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (58, 'Djibouti', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (59, 'Dominica', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (60, 'Dominican Republic', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (61, 'Ecuador', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (66, 'Egypt', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (67, 'El Salvador', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (68, 'Equatorial Guinea', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (69, 'Eritrea', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (80, 'Estonia', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (81, 'Ethiopia', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (82, 'Falkland Islands (Malvinas)', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (83, 'Faroe Islands', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (84, 'Fiji', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (85, 'Finland', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (86, 'France', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (87, 'French Guiana', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (88, 'French Polynesia', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (90, 'Gabon', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (91, 'Gambia', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (92, 'Georgia', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (93, 'Germany', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (94, 'Ghana', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (95, 'Gibraltar', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (96, 'Greece', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (97, 'Greenland', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (98, 'Grenada', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (99, 'Guadeloupe', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (100, 'Guam', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (101, 'Guatemala', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (102, 'Guinea', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (103, 'Guinea-Bissau', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (104, 'Guyana', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (105, 'Haiti', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (106, 'Heard Island and Mcdonald Islands', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (107, 'Holy See (Vatican City State)', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (108, 'Honduras', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (109, 'Hong Kong', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (110, 'Hungary', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (111, 'Iceland', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (112, 'India', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (113, 'Indonesia', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (114, 'Iran, Islamic Republic of', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (115, 'Iraq', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (116, 'Ireland', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (117, 'Israel', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (118, 'Italy', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (119, 'Jamaica', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (120, 'Japan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (121, 'Jordan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (122, 'Kazakhstan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (123, 'Kenya', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (124, 'Kiribati', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (125, 'Korea, Democratic People''s Republic of', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (126, 'Korea, Republic of', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (127, 'Kuwait', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (128, 'Kyrgyzstan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (129, 'Lao People''s Democratic Republic', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (130, 'Latvia', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (131, 'Lebanon', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (132, 'Lesotho', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (133, 'Liberia', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (134, 'Libyan Arab Jamahiriya', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (135, 'Liechtenstein', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (136, 'Lithuania', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (137, 'Luxembourg', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (138, 'Macao', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (139, 'Macedonia, the Former Yugoslav Republic of', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (140, 'Madagascar', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (141, 'Malawi', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (142, 'Malaysia', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (143, 'Maldives', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (144, 'Mali', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (145, 'Malta', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (146, 'Marshall Islands', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (147, 'Martinique', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (148, 'Mauritania', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (149, 'Mauritius', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (150, 'Mayotte', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (151, 'Mexico', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (152, 'Micronesia, Federated States of', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (153, 'Moldova, Republic of', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (154, 'Monaco', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (155, 'Mongolia', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (156, 'Montserrat', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (157, 'Morocco', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (158, 'Mozambique', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (159, 'Myanmar', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (160, 'Namibia', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (161, 'Nauru', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (162, 'Nepal', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (163, 'Netherlands', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (164, 'Netherlands Antilles', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (165, 'New Caledonia', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (166, 'New Zealand', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (167, 'Nicaragua', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (168, 'Niger', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (169, 'Nigeria', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (170, 'Niue', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (171, 'Norfolk Island', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (172, 'Northern Mariana Islands', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (173, 'Norway', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (174, 'Oman', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (175, 'Pakistan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (176, 'Palau', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (177, 'Palestinian Territory, Occupied', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (178, 'Panama', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (179, 'Papua New Guinea', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (180, 'Paraguay', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (181, 'Peru', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (182, 'Philippines', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (184, 'Poland', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (185, 'Portugal', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (186, 'Puerto Rico', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (187, 'Qatar', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (189, 'Romania', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (190, 'Russian Federation', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (191, 'Rwanda', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (192, 'Saint Helena', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (193, 'Saint Kitts and Nevis', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (194, 'Saint Lucia', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (195, 'Saint Pierre and Miquelon', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (196, 'Saint Vincent and the Grenadines', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (197, 'Samoa', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (198, 'San Marino', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (199, 'Sao Tome and Principe', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (200, 'Saudi Arabia', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (201, 'Senegal', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (202, 'Serbia', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (203, 'Seychelles', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (204, 'Sierra Leone', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (205, 'Singapore', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (206, 'Slovakia', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (207, 'Slovenia', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (208, 'Solomon Islands', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (209, 'Somalia', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (210, 'South Africa', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (211, 'South Georgia and the South Sandwich Islands', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (212, 'Spain', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (213, 'Sri Lanka', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (214, 'Sudan', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (215, 'Suriname', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (216, 'Svalbard and Jan Mayen', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (217, 'Swaziland', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (218, 'Sweden', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (219, 'Switzerland', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (220, 'Syrian Arab Republic', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (221, 'Taiwan, Province of China', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (222, 'Tajikistan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (223, 'Tanzania, United Republic of', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (224, 'Thailand', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (225, 'Timor-Leste', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (226, 'Togo', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (227, 'Tokelau', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (228, 'Tonga', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (229, 'Trinidad and Tobago', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (230, 'Tunisia', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (231, 'Turkey', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (232, 'Turkmenistan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (233, 'Turks and Caicos Islands', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (234, 'Tuvalu', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (235, 'Uganda', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (236, 'Ukraine', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (237, 'United Arab Emirates', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (238, 'United Kingdom', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (239, 'United States', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (240, 'United States Minor Outlying Islands', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (241, 'Uruguay', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (242, 'Uzbekistan', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (243, 'Vanuatu', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (244, 'Venezuela', '0', 'en_US', 6);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (245, 'Vietnam', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (246, 'Virgin Islands, British', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (247, 'Virgin Islands, U.s.', '0', 'en_US', 4);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (248, 'Wallis and Futuna', '0', 'en_US', 5);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (249, 'Western Sahara', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (250, 'Yemen', '0', 'en_US', 2);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (251, 'Zambia', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (252, 'Zimbabwe', '0', 'en_US', 1);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (253, 'Montenegro', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (254, 'Kosovo', '0', 'en_US', 3);
insert into CountryLocale (countryId, description, sortOrder, localeCode, regionId) values (256, 'Afghanistan', '0', 'en_US', 2);
DROP TABLE IF EXISTS EntityType;
CREATE TABLE EntityType ( entityTypeId INT NOT NULL COMMENT 'Sequential ID.', entityCode CHAR(3) NOT NULL, description TEXT NOT NULL COMMENT 'Describes type of the entity, i.e. Test Case, Test Run.', PRIMARY KEY (entityTypeId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Describes type of the entity, i.e. Test Case, Test Run.';
DROP TABLE IF EXISTS Environment;
CREATE TABLE Environment ( environmentId INT NOT NULL AUTO_INCREMENT COMMENT 'Sequential ID.', environmentTypeId INT NOT NULL COMMENT 'Country, Language, etc.', companyId INT DEFAULT '-22222' NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, originalId INT NOT NULL, PRIMARY KEY (environmentId), CONSTRAINT fk_EnvironmentFilter_TestCaseEnvironmentFilterType1 FOREIGN KEY (environmentTypeId) REFERENCES EnvironmentType (environmentTypeId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_EnvironmentFilter_TestCaseEnvironmentFilterType1 (environmentTypeId), INDEX IDX_E_environmentTypeId (environmentTypeId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS EnvironmentGroup;
CREATE TABLE EnvironmentGroup ( environmentGroupId INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, description TEXT, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, deprecated TINYINT(1) DEFAULT '0' NOT NULL, executed TINYINT(1) DEFAULT '0' NOT NULL, companyId INT NOT NULL, version INT DEFAULT '0' NOT NULL, testerProfileEnvironmentId INT, testerProfileId INT, environmentTypeId INT, externalIdentifier VARCHAR(255), PRIMARY KEY (environmentGroupId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Definition of a set of environmental requirements. ';
DROP TABLE IF EXISTS EnvironmentGroupEnvironment;
CREATE TABLE EnvironmentGroupEnvironment ( environmentGroupEnvironmentId INT NOT NULL AUTO_INCREMENT, environmentGroupId INT NOT NULL, environmentId INT NOT NULL, optional TINYINT(1) DEFAULT '0' NOT NULL, weightIndex INT DEFAULT '0' NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (environmentGroupEnvironmentId), INDEX IDX_environmentGroupId_environmentId (environmentGroupId, environmentId), INDEX IDX_environmentGroupId (environmentGroupId), INDEX IDX_environmentId (environmentId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Definition environmental requirement in a related set. ';
DROP TABLE IF EXISTS EnvironmentLocale;
CREATE TABLE EnvironmentLocale ( environmentLocaleId INT NOT NULL AUTO_INCREMENT COMMENT 'Sequential ID.', environmentId INT NOT NULL, name VARCHAR(255) NOT NULL, localeCode CHAR(5) DEFAULT 'en_US' NOT NULL COMMENT 'en_US, ru_RU, etc.', sortOrder INT DEFAULT '0' NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (environmentLocaleId), CONSTRAINT fk_EnvironmentLocale_Environment1 FOREIGN KEY (environmentId) REFERENCES Environment (environmentId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_EnvironmentLocale_Environment1 (environmentId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Localized descriptions';
DROP TABLE IF EXISTS EnvironmentProfile;
CREATE TABLE EnvironmentProfile ( environmentProfileId INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, description TEXT, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, companyId INT DEFAULT '-22222' NOT NULL, version INT DEFAULT '0' NOT NULL, testerProfileId INT, PRIMARY KEY (environmentProfileId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Definition of a set of environmental requirements. ';
DROP TABLE IF EXISTS EnvironmentProfileEnvironment;
CREATE TABLE EnvironmentProfileEnvironment ( environmentProfileEnvironmentId INT NOT NULL AUTO_INCREMENT, environmentProfileId INT NOT NULL, environmentId INT NOT NULL, optional TINYINT(1) DEFAULT '0' NOT NULL, weightIndex INT DEFAULT '0' NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (environmentProfileEnvironmentId), INDEX IDX_EPE_environmentProfileId_environmentId (environmentProfileId, environmentId), INDEX IDX_EPE_environmentProfileId (environmentProfileId), INDEX IDX_EPE_environmentId (environmentId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Definition environmental requirement in a related set. ';
DROP TABLE IF EXISTS EnvironmentProfileEnvironmentGroup;
CREATE TABLE EnvironmentProfileEnvironmentGroup ( environmentProfileEnvironmentGroupId INT NOT NULL AUTO_INCREMENT, environmentGroupId INT NOT NULL, environmentProfileId INT NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (environmentProfileEnvironmentGroupId), INDEX IDX_EPEG_environmentProfileId_environmentGroupId (environmentProfileId, environmentGroupId), INDEX IDX_EPEG_environmentProfileId (environmentProfileId), INDEX IDX_EPEG_environmentGroupId (environmentGroupId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Each group within profile = separate test result.';
DROP TABLE IF EXISTS EnvironmentType;
CREATE TABLE EnvironmentType ( environmentTypeId INT NOT NULL AUTO_INCREMENT COMMENT 'Sequential ID.', parentEnvironmentTypeId INT COMMENT 'States within USA.', companyId INT DEFAULT '-22222' NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, groupType TINYINT(1) DEFAULT '0' NOT NULL, PRIMARY KEY (environmentTypeId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Could be anything like Country, Language, etc.';
DROP TABLE IF EXISTS EnvironmentTypeLocale;
CREATE TABLE EnvironmentTypeLocale ( environmentTypeLocaleId INT NOT NULL AUTO_INCREMENT COMMENT 'Sequential ID.', environmentTypeId INT NOT NULL, name VARCHAR(255) NOT NULL, localeCode CHAR(5) NOT NULL COMMENT 'en_US, ru_RU, etc.', sortOrder INT NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (environmentTypeLocaleId), CONSTRAINT fk_EnvironmentTypeLocale_EnvironmentType0 FOREIGN KEY (environmentTypeId) REFERENCES EnvironmentType (environmentTypeId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_EnvironmentTypeLocale_EnvironmentType0 (environmentTypeId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Localized descriptions';
DROP TABLE IF EXISTS Locale;
CREATE TABLE Locale ( localeCode VARCHAR(10) NOT NULL, description VARCHAR(250) NOT NULL, sortOrder INT NOT NULL, PRIMARY KEY (localeCode) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into Locale (localeCode, description, sortOrder) values ('en_US', 'English', 0);
DROP TABLE IF EXISTS ParentDependableEnvironment;
CREATE TABLE ParentDependableEnvironment ( parentDependableEnvironmentId INT NOT NULL AUTO_INCREMENT COMMENT 'Sequential ID.', environmentId INT NOT NULL COMMENT 'like Model ID', parentEnvironmentId INT NOT NULL COMMENT 'Like Make ID', companyId INT DEFAULT '-22222' NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (parentDependableEnvironmentId), CONSTRAINT fk_ParentDependableEnvironment_Environment1 FOREIGN KEY (environmentId) REFERENCES Environment (environmentId) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_ParentDependableEnvironment_Environment2 FOREIGN KEY (parentEnvironmentId) REFERENCES Environment (environmentId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_ParentDependableEnvironment_Environment2 (parentEnvironmentId), INDEX IDX_PDE_parentEnvironmentId_environmentId (parentEnvironmentId, environmentId), INDEX IDX_PDE_parentEnvironmentId (parentEnvironmentId), INDEX IDX_PDE_environmentId (environmentId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='dependencies between parent/child, like Make and Model.';
DROP TABLE IF EXISTS Permission;
CREATE TABLE Permission ( permissionId INT NOT NULL AUTO_INCREMENT, permissionCode VARCHAR(50) NOT NULL, name VARCHAR(255) NOT NULL, assignable TINYINT(1) DEFAULT '1' NOT NULL, PRIMARY KEY (permissionId), CONSTRAINT IDX_PERMISSION_CODE UNIQUE (permissionCode) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into Permission (permissionId, permissionCode, name, assignable) values (-1, 'PERMISSION_ANNONIMOUS', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (1, 'PERMISSION_ROLE_EDIT', '', '0');
insert into Permission (permissionId, permissionCode, name, assignable) values (2, 'PERMISSION_ROLE_PERMISSION_ASSIGN', '', '0');
insert into Permission (permissionId, permissionCode, name, assignable) values (3, 'PERMISSION_COMPANY_INFO_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (4, 'PERMISSION_COMPANY_INFO_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (5, 'PERMISSION_COMPANY_USERS_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (6, 'PERMISSION_COMPANY_USERS_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (7, 'PERMISSION_PRODUCT_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (8, 'PERMISSION_PRODUCT_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (9, 'PERMISSION_TEST_CASE_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (10, 'PERMISSION_TEST_CASE_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (11, 'PERMISSION_TEST_CASE_APPROVE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (12, 'PERMISSION_TEST_CASE_ACTIVATE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (13, 'PERMISSION_TEST_SUITE_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (14, 'PERMISSION_TEST_SUITE_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (15, 'PERMISSION_TEST_SUITE_APPROVE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (16, 'PERMISSION_TEST_SUITE_ACTIVATE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (17, 'PERMISSION_TEST_PLAN_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (18, 'PERMISSION_TEST_PLAN_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (19, 'PERMISSION_TEST_PLAN_APPROVE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (20, 'PERMISSION_TEST_PLAN_ACTIVATE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (21, 'PERMISSION_TEST_CYCLE_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (22, 'PERMISSION_TEST_CYCLE_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (23, 'PERMISSION_TEST_CYCLE_ACTIVATE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (24, 'PERMISSION_TEST_RUN_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (25, 'PERMISSION_TEST_RUN_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (26, 'PERMISSION_TEST_RUN_ACTIVATE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (27, 'PERMISSION_TEST_RUN_TEST_CASE_ASSIGN', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (28, 'PERMISSION_TEST_RUN_ASSIGNMENT_EXECUTE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (29, 'PERMISSION_TEST_RUN_RESULT_APPROVE', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (30, 'PERMISSION_USER_ACCOUNT_VIEW', ' ', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (31, 'PERMISSION_USER_ACCOUNT_EDIT', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (32, 'PERMISSION_ENVIRONMENT_VIEW', '', '1');
insert into Permission (permissionId, permissionCode, name, assignable) values (33, 'PERMISSION_ENVIRONMENT_EDIT', '', '1');
DROP TABLE IF EXISTS Product;
CREATE TABLE Product ( productId INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL COMMENT 'Name of the product.', description TEXT COMMENT 'Detailed description of the Product.', companyId INT NOT NULL, environmentProfileId INT, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (productId), CONSTRAINT fk_Product_Company1 FOREIGN KEY (companyId) REFERENCES Company (companyId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_Product_Company1 (companyId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS ProductComponent;
CREATE TABLE ProductComponent ( productComponentId INT NOT NULL AUTO_INCREMENT, productId INT NOT NULL, name VARCHAR(255) NOT NULL COMMENT 'Name of Component.', description TEXT COMMENT 'Detailed description of Component', createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (productComponentId), CONSTRAINT fk_ProductComponent_Product1 FOREIGN KEY (productId) REFERENCES Product (productId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_ProductComponent_Product1 (productId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS RolePermission;
CREATE TABLE RolePermission ( rolePermissionId INT NOT NULL AUTO_INCREMENT, permissionId INT NOT NULL, accessRoleId INT NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (rolePermissionId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (1, 1, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (2, 2, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (3, 3, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (4, 4, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (5, 5, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (6, 6, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (7, 7, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (8, 8, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (9, 9, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (10, 10, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (11, 11, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (12, 12, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (13, 13, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (14, 14, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (15, 15, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (16, 16, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (17, 17, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (18, 18, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (19, 19, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (20, 20, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (21, 21, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (22, 22, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (23, 23, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (24, 24, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (25, 25, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (26, 26, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (27, 27, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (28, 28, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (29, 29, 1, 1, '2010-11-22 00:00:00', 1, '2010-11-22 00:00:00');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (30, 30, 1, 1, '2010-11-24 20:24:33', 1, '2010-11-24 20:24:33');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (31, 31, 1, 1, '2010-11-24 20:24:33', 1, '2010-11-24 20:24:33');
insert into RolePermission (rolePermissionId, permissionId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (32, 32, 1, 1, '2010-11-24 20:24:33', 1, '2010-11-24 20:24:33');
DROP TABLE IF EXISTS SignInFact;
CREATE TABLE SignInFact ( id INT NOT NULL AUTO_INCREMENT, userId INT NOT NULL, impersonatedUserId INT, startDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP, endDate TIMESTAMP NULL, sessionId VARCHAR(255) NOT NULL, PRIMARY KEY (id), INDEX FK_SignInFact_User (userId), INDEX FK_SignInFact_ImpersonatedUser (impersonatedUserId), INDEX IDX_SESSION_ID (sessionId, startDate) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS Tag;
CREATE TABLE Tag ( tagId INT NOT NULL AUTO_INCREMENT COMMENT 'Seq Num.', tag VARCHAR(45) NOT NULL COMMENT 'Short text associated with the test case.', createdBy INT NOT NULL COMMENT 'UserID who created this.', createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, companyId INT DEFAULT '-22222' NOT NULL, PRIMARY KEY (tagId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Tags which could be associated with test entities. ';
DROP TABLE IF EXISTS TestCase;
CREATE TABLE TestCase ( testCaseId INT NOT NULL AUTO_INCREMENT, productId INT NOT NULL, maxAttachmentSizeInMBytes INT DEFAULT '10' NOT NULL, maxNumberOfAttachments INT DEFAULT '3' NOT NULL, testCycleId INT COMMENT 'Indicates if during specific Test Cycle.', name VARCHAR(255) NOT NULL, PRIMARY KEY (testCaseId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Test Cases defined for a specific Product.';
DROP TABLE IF EXISTS TestCaseProductComponent;
CREATE TABLE TestCaseProductComponent ( testCaseProductComponentId INT NOT NULL AUTO_INCREMENT, testCaseId INT NOT NULL COMMENT 'Associated test case id.', productComponentId INT NOT NULL COMMENT 'Associated test case id.', createdBy INT NOT NULL COMMENT 'UserID who created this.', createDate DATETIME NOT NULL COMMENT 'Date when this step was created.', lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (testCaseProductComponentId), CONSTRAINT fk_TestCaseProductComponent_ProductComponent1 FOREIGN KEY (productComponentId) REFERENCES ProductComponent (productComponentId) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_TestCaseProductComponent_TestCase1 FOREIGN KEY (testCaseId) REFERENCES TestCase (testCaseId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_TestCaseProductComponent_ProductComponent1 (productComponentId), INDEX fk_TestCaseProductComponent_TestCase1 (testCaseId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Components covered by test case - optional.';
DROP TABLE IF EXISTS TestCaseStatus;
CREATE TABLE TestCaseStatus ( testCaseStatusId INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (testCaseStatusId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestCaseStatus (testCaseStatusId) values (1);
insert into TestCaseStatus (testCaseStatusId) values (2);
insert into TestCaseStatus (testCaseStatusId) values (3);
insert into TestCaseStatus (testCaseStatusId) values (4);
insert into TestCaseStatus (testCaseStatusId) values (5);
DROP TABLE IF EXISTS TestCaseStatusLocale;
CREATE TABLE TestCaseStatusLocale ( testCaseStatusId INT NOT NULL AUTO_INCREMENT, description VARCHAR(50) NOT NULL, sortOrder INT NOT NULL, localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, PRIMARY KEY (testCaseStatusId, localeCode), CONSTRAINT FK_TestCaseStatus_Id FOREIGN KEY (testCaseStatusId) REFERENCES TestCaseStatus (testCaseStatusId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestCaseStatusLocale (testCaseStatusId, description, sortOrder, localeCode) values (1, 'Draft', 0, 'en_US');
insert into TestCaseStatusLocale (testCaseStatusId, description, sortOrder, localeCode) values (2, 'Active', 0, 'en_US');
insert into TestCaseStatusLocale (testCaseStatusId, description, sortOrder, localeCode) values (3, 'Locked', 0, 'en_US');
insert into TestCaseStatusLocale (testCaseStatusId, description, sortOrder, localeCode) values (4, 'Closed', 0, 'en_US');
insert into TestCaseStatusLocale (testCaseStatusId, description, sortOrder, localeCode) values (5, 'Discarded', 0, 'en_US');
DROP TABLE IF EXISTS TestCaseStep;
CREATE TABLE TestCaseStep ( testCaseStepId INT NOT NULL AUTO_INCREMENT, testCaseVersionId INT NOT NULL COMMENT 'Associated test case id.', stepNumber INT NOT NULL COMMENT 'Execution step number.', name VARCHAR(255) NOT NULL, instruction TEXT NOT NULL COMMENT 'Descriptions of tasks required t execute this step.', expectedResult TEXT NOT NULL COMMENT 'Description of the outcome.', estimatedTimeInMin INT, createdBy INT NOT NULL COMMENT 'UserID who created this.', createDate DATETIME NOT NULL COMMENT 'Date when this step was created.', lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (testCaseStepId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Contains instructions and results for each step.';
DROP TABLE IF EXISTS TestCaseTag;
CREATE TABLE TestCaseTag ( testCaseTagId INT NOT NULL AUTO_INCREMENT COMMENT 'Seq Num.', testCaseId INT NOT NULL COMMENT 'Associated test case id.', tagId INT NOT NULL COMMENT 'Associated tag id.', createdBy INT NOT NULL COMMENT 'UserID who created this.', createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (testCaseTagId), CONSTRAINT fk_TestCaseTag_TestCase1 FOREIGN KEY (testCaseId) REFERENCES TestCase (testCaseId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_TestCaseTag_TestCase1 (testCaseId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Contains short tags associated with this Test Case. ';
DROP TABLE IF EXISTS TestCaseVersion;
CREATE TABLE TestCaseVersion ( testCaseVersionId INT NOT NULL AUTO_INCREMENT, testCaseId INT NOT NULL, testCaseStatusId INT NOT NULL COMMENT 'active, pending, etc.', description TEXT NOT NULL, majorVersion INT NOT NULL, minorVersion INT NOT NULL, latestVersion TINYINT(1) NOT NULL, approvalStatusId INT NOT NULL COMMENT 'Pending/Approved/Rejected', approvedBy INT COMMENT 'TM (or anyone with permission to Approve).', approveDate DATETIME, environmentProfileId INT COMMENT 'Optional association to a set of Environments.', createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT NOT NULL, productId INT NOT NULL, PRIMARY KEY (testCaseVersionId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Test Cases defined for a specific Product Version.';
DROP TABLE IF EXISTS TestCycle;
CREATE TABLE TestCycle ( testCycleId INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, description TEXT NOT NULL, productId INT NOT NULL, testCycleStatusId INT NOT NULL, environmentProfileId INT NOT NULL, startDate DATETIME NOT NULL, endDate DATETIME COMMENT 'End date could be null to specify ongoing project.', communityAuthoringAllowed TINYINT(1) NOT NULL, communityAccessAllowed TINYINT(1) NOT NULL COMMENT 'If Testers can submit test cases.', createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT NOT NULL, PRIMARY KEY (testCycleId), INDEX fk_TestCycle_Product1 (productId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Controls User access to activities.';
DROP TABLE IF EXISTS TestCycleStatus;
CREATE TABLE TestCycleStatus ( testCycleStatusId INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (testCycleStatusId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestCycleStatus (testCycleStatusId) values (1);
insert into TestCycleStatus (testCycleStatusId) values (2);
insert into TestCycleStatus (testCycleStatusId) values (3);
insert into TestCycleStatus (testCycleStatusId) values (4);
insert into TestCycleStatus (testCycleStatusId) values (5);
DROP TABLE IF EXISTS TestCycleStatusLocale;
CREATE TABLE TestCycleStatusLocale ( testCycleStatusId INT NOT NULL AUTO_INCREMENT, description VARCHAR(50) NOT NULL, sortOrder INT NOT NULL, localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, PRIMARY KEY (testCycleStatusId, localeCode), CONSTRAINT FK_TestCycleStatus_Id FOREIGN KEY (testCycleStatusId) REFERENCES TestCycleStatus (testCycleStatusId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestCycleStatusLocale (testCycleStatusId, description, sortOrder, localeCode) values (1, 'Draft', 0, 'en_US');
insert into TestCycleStatusLocale (testCycleStatusId, description, sortOrder, localeCode) values (2, 'Active', 0, 'en_US');
insert into TestCycleStatusLocale (testCycleStatusId, description, sortOrder, localeCode) values (3, 'Locked', 0, 'en_US');
insert into TestCycleStatusLocale (testCycleStatusId, description, sortOrder, localeCode) values (4, 'Closed', 0, 'en_US');
insert into TestCycleStatusLocale (testCycleStatusId, description, sortOrder, localeCode) values (5, 'Discarded', 0, 'en_US');
DROP TABLE IF EXISTS TestCycleUser;
CREATE TABLE TestCycleUser ( testCycleId INT NOT NULL, userId INT NOT NULL, PRIMARY KEY (testCycleId, userId), CONSTRAINT fk_TestCycleUser_TestCycle1 FOREIGN KEY (testCycleId) REFERENCES TestCycle (testCycleId) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_TestCycleUser_User1 FOREIGN KEY (userId) REFERENCES User (userId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_TestCycleUser_User1 (userId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Team of testers selected for project (Test Cycle).';
DROP TABLE IF EXISTS TestCycleUserRole;
CREATE TABLE TestCycleUserRole ( testCycleId INT NOT NULL, accessRoleId INT NOT NULL, userId INT NOT NULL, PRIMARY KEY (testCycleId, accessRoleId, userId), CONSTRAINT fk_TestCycleUserRole_AccessRole1 FOREIGN KEY (accessRoleId) REFERENCES AccessRole (accessRoleId) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_TestCycleUserRole_TestCycleUser1 FOREIGN KEY (testCycleId) REFERENCES TestCycleUser (testCycleId) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_TestCycleUserRole_User1 FOREIGN KEY (userId) REFERENCES User (userId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_TestCycleUserRole_AccessRole1 (accessRoleId), INDEX fk_TestCycleUserRole_User1 (userId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Optional Roles assigned to project team members.';
DROP TABLE IF EXISTS TestPlan;
CREATE TABLE TestPlan ( testPlanId INT NOT NULL AUTO_INCREMENT, productId INT NOT NULL, name VARCHAR(255) NOT NULL, description TEXT, testPlanStatusId INT NOT NULL, environmentProfileId INT, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT NOT NULL, PRIMARY KEY (testPlanId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS TestPlanStatus;
CREATE TABLE TestPlanStatus ( testPlanStatusId INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (testPlanStatusId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestPlanStatus (testPlanStatusId) values (1);
insert into TestPlanStatus (testPlanStatusId) values (2);
insert into TestPlanStatus (testPlanStatusId) values (3);
insert into TestPlanStatus (testPlanStatusId) values (4);
insert into TestPlanStatus (testPlanStatusId) values (5);
DROP TABLE IF EXISTS TestPlanStatusLocale;
CREATE TABLE TestPlanStatusLocale ( testPlanStatusId INT NOT NULL AUTO_INCREMENT, description VARCHAR(50) NOT NULL, sortOrder INT NOT NULL, localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, PRIMARY KEY (testPlanStatusId, localeCode), CONSTRAINT FK_TestPlanStatus_Id FOREIGN KEY (testPlanStatusId) REFERENCES TestPlanStatus (testPlanStatusId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestPlanStatusLocale (testPlanStatusId, description, sortOrder, localeCode) values (1, 'Draft', 0, 'en_US');
insert into TestPlanStatusLocale (testPlanStatusId, description, sortOrder, localeCode) values (2, 'Active', 0, 'en_US');
insert into TestPlanStatusLocale (testPlanStatusId, description, sortOrder, localeCode) values (3, 'Locked', 0, 'en_US');
insert into TestPlanStatusLocale (testPlanStatusId, description, sortOrder, localeCode) values (4, 'Closed', 0, 'en_US');
insert into TestPlanStatusLocale (testPlanStatusId, description, sortOrder, localeCode) values (5, 'Discarded', 0, 'en_US');
DROP TABLE IF EXISTS TestPlanTestSuite;
CREATE TABLE TestPlanTestSuite ( testPlanTestSuiteId INT NOT NULL AUTO_INCREMENT, testSuiteId INT NOT NULL, runOrder INT NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, testPlanId INT NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (testPlanTestSuiteId), CONSTRAINT fk_TestPlanTestSuite_TestSuite1 FOREIGN KEY (testSuiteId) REFERENCES TestSuite (testSuiteId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_TestPlanTestSuite_TestSuite1 (testSuiteId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS TestRun;
CREATE TABLE TestRun ( testRunId INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, description TEXT, testRunStatusId INT NOT NULL, testCycleId INT NOT NULL COMMENT 'TestCycleId for wich this Test Run was created.', productId INT NOT NULL, startDate DATETIME, endDate DATETIME, useLatestVesrions TINYINT(1) NOT NULL, selfAssignAllowed TINYINT(1) NOT NULL, selfAssignLimit INT DEFAULT '1' NOT NULL, selfAssignPerEnvironment TINYINT(1) NOT NULL, environmentProfileId INT, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT NOT NULL, PRIMARY KEY (testRunId), CONSTRAINT fk_TestRun_TestCycle1 FOREIGN KEY (testCycleId) REFERENCES TestCycle (testCycleId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_TestRun_TestCycle1 (testCycleId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS TestRunExternalBug;
CREATE TABLE TestRunExternalBug ( testRunExternalBugId INT NOT NULL AUTO_INCREMENT COMMENT 'Sequential ID.', testRunResultId INT NOT NULL, externalBugId VARCHAR(45) NOT NULL COMMENT 'External Bug Tracking system bug id.', externalBugUrl VARCHAR(255) COMMENT 'External Bug Tracking system bug URL.', createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (testRunExternalBugId), CONSTRAINT fk_TestRunExecutionBug_TestRunExecution1 FOREIGN KEY (testRunResultId) REFERENCES TestRunResult (testRunResultId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_TestRunExecutionBug_TestRunExecution1 (testRunResultId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Sexternal bug tracking system ids. ';
DROP TABLE IF EXISTS TestRunResult;
CREATE TABLE TestRunResult ( testRunResultId INT NOT NULL AUTO_INCREMENT, testRunAssignmentId INT NOT NULL, testRunId INT NOT NULL, productId INT NOT NULL, testCaseId INT NOT NULL, testCaseVersionId INT NOT NULL, testerId INT NOT NULL, testRunResultStatusId INT NOT NULL COMMENT 'Status: NOT TESTED, BLOCKED, FAILED, PASSED', runDate DATETIME, actualResult TEXT, failedStepNumber INT, actualTimeInMin INT, comment TEXT, approvalStatusId INT NOT NULL COMMENT 'Approved/Rejected', approvedBy INT COMMENT 'TM (or anyone with permission to Approve).', approveDate DATETIME, environmentGroupId INT, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT NOT NULL, PRIMARY KEY (testRunResultId), INDEX fk_TestRunExecutionResult_TestRunTestCaseAssignment1 (testRunAssignmentId), INDEX fk_TestRunResult_TestCase1 (testCaseId), INDEX fk_TestRunResult_TestCaseVersion1 (testCaseVersionId), INDEX fk_TestRunResult_TestRun1 (testRunId), INDEX fk_TestRunResult_User1 (testerId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Results of Test Case within a Test Run. ';
DROP TABLE IF EXISTS TestRunResultStatus;
CREATE TABLE TestRunResultStatus ( testRunResultStatusId INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (testRunResultStatusId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestRunResultStatus (testRunResultStatusId) values (1);
insert into TestRunResultStatus (testRunResultStatusId) values (2);
insert into TestRunResultStatus (testRunResultStatusId) values (3);
insert into TestRunResultStatus (testRunResultStatusId) values (4);
DROP TABLE IF EXISTS TestRunResultStatusLocale;
CREATE TABLE TestRunResultStatusLocale ( testRunResultStatusId INT NOT NULL AUTO_INCREMENT, description VARCHAR(50) NOT NULL, sortOrder INT NOT NULL, localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, PRIMARY KEY (testRunResultStatusId, localeCode), CONSTRAINT FK_TestRunResultStatus_Id FOREIGN KEY (testRunResultStatusId) REFERENCES TestRunResultStatus (testRunResultStatusId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestRunResultStatusLocale (testRunResultStatusId, description, sortOrder, localeCode) values (1, 'Pending', 0, 'en_US');
insert into TestRunResultStatusLocale (testRunResultStatusId, description, sortOrder, localeCode) values (2, 'Passed', 0, 'en_US');
insert into TestRunResultStatusLocale (testRunResultStatusId, description, sortOrder, localeCode) values (3, 'Failed', 0, 'en_US');
insert into TestRunResultStatusLocale (testRunResultStatusId, description, sortOrder, localeCode) values (4, 'Blocked', 0, 'en_US');
DROP TABLE IF EXISTS TestRunStatus;
CREATE TABLE TestRunStatus ( testRunStatusId INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (testRunStatusId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestRunStatus (testRunStatusId) values (1);
insert into TestRunStatus (testRunStatusId) values (2);
insert into TestRunStatus (testRunStatusId) values (3);
insert into TestRunStatus (testRunStatusId) values (4);
insert into TestRunStatus (testRunStatusId) values (5);
DROP TABLE IF EXISTS TestRunStatusLocale;
CREATE TABLE TestRunStatusLocale ( testRunStatusId INT NOT NULL AUTO_INCREMENT, description VARCHAR(50) NOT NULL, sortOrder INT NOT NULL, localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, PRIMARY KEY (testRunStatusId, localeCode), CONSTRAINT FK_TestRunStatus_Id FOREIGN KEY (testRunStatusId) REFERENCES TestRunStatus (testRunStatusId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestRunStatusLocale (testRunStatusId, description, sortOrder, localeCode) values (1, 'Draft', 0, 'en_US');
insert into TestRunStatusLocale (testRunStatusId, description, sortOrder, localeCode) values (2, 'Active', 0, 'en_US');
insert into TestRunStatusLocale (testRunStatusId, description, sortOrder, localeCode) values (3, 'Locked', 0, 'en_US');
insert into TestRunStatusLocale (testRunStatusId, description, sortOrder, localeCode) values (4, 'Closed', 0, 'en_US');
insert into TestRunStatusLocale (testRunStatusId, description, sortOrder, localeCode) values (5, 'Discarded', 0, 'en_US');
DROP TABLE IF EXISTS TestRunTestCase;
CREATE TABLE TestRunTestCase ( testRunTestCaseId INT NOT NULL AUTO_INCREMENT, testRunId INT NOT NULL, testCaseVersionId INT NOT NULL, testCaseId INT NOT NULL, priorityId INT NOT NULL, runOrder INT NOT NULL, blocking TINYINT(1) NOT NULL, selfAssignAllowed TINYINT(1) NOT NULL, selfAssignLimit INT DEFAULT '1' NOT NULL, selfAssignPerEnvironment TINYINT(1) NOT NULL, environmentProfileId INT, testSuiteId INT COMMENT 'Optional, if Test Case came from a Test Suite or null.', createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (testRunTestCaseId), INDEX fk_TestRunTestCase_TestRun1 (testRunId), INDEX fk_TestRunTestCase_TestCaseVersion1 (testCaseVersionId), INDEX fk_TestRunTestCase_TestCaseVersion2 (testCaseId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='TestCases assigned to a test run.';
DROP TABLE IF EXISTS TestRunTestCaseAssignment;
CREATE TABLE TestRunTestCaseAssignment ( testRunAssignmentId INT NOT NULL AUTO_INCREMENT, testRunTestCaseId INT NOT NULL, productId INT NOT NULL, testRunId INT NOT NULL, testCaseId INT NOT NULL, testCaseVersionId INT NOT NULL, testerId INT NOT NULL, environmentProfileId INT, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (testRunAssignmentId), INDEX fk_TestRunTestCaseAssignment_TestRun1 (testRunId), INDEX fk_TestRunAssignment_TestRunTestCase1 (testRunTestCaseId), INDEX fk_TestRunTestCaseAssignment_Product1 (productId), INDEX fk_TestRunTestCaseAssignment_TestCase1 (testCaseId), INDEX fk_TestRunTestCaseAssignment_TestCaseVersion1 (testCaseVersionId), INDEX fk_TestRunTestCaseAssignment_User1 (testerId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Testers assigned to run specific TestCases for a test run. ';
DROP TABLE IF EXISTS TestSuite;
CREATE TABLE TestSuite ( testSuiteId INT NOT NULL AUTO_INCREMENT, productId INT NOT NULL, name VARCHAR(255) NOT NULL, description TEXT, testSuiteStatusId INT NOT NULL, environmentProfileId INT, useLatestVersions TINYINT(1) NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT NOT NULL, PRIMARY KEY (testSuiteId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS TestSuiteStatus;
CREATE TABLE TestSuiteStatus ( testSuiteStatusId INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (testSuiteStatusId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestSuiteStatus (testSuiteStatusId) values (1);
insert into TestSuiteStatus (testSuiteStatusId) values (2);
insert into TestSuiteStatus (testSuiteStatusId) values (3);
insert into TestSuiteStatus (testSuiteStatusId) values (4);
insert into TestSuiteStatus (testSuiteStatusId) values (5);
DROP TABLE IF EXISTS TestSuiteStatusLocale;
CREATE TABLE TestSuiteStatusLocale ( testSuiteStatusId INT NOT NULL AUTO_INCREMENT, description VARCHAR(50) NOT NULL, sortOrder INT NOT NULL, localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, PRIMARY KEY (testSuiteStatusId, localeCode), CONSTRAINT FK_TestSuiteStatus_Id FOREIGN KEY (testSuiteStatusId) REFERENCES TestSuiteStatus (testSuiteStatusId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into TestSuiteStatusLocale (testSuiteStatusId, description, sortOrder, localeCode) values (1, 'Draft', 0, 'en_US');
insert into TestSuiteStatusLocale (testSuiteStatusId, description, sortOrder, localeCode) values (2, 'Active', 0, 'en_US');
insert into TestSuiteStatusLocale (testSuiteStatusId, description, sortOrder, localeCode) values (3, 'Locked', 0, 'en_US');
insert into TestSuiteStatusLocale (testSuiteStatusId, description, sortOrder, localeCode) values (4, 'Closed', 0, 'en_US');
insert into TestSuiteStatusLocale (testSuiteStatusId, description, sortOrder, localeCode) values (5, 'Discarded', 0, 'en_US');
DROP TABLE IF EXISTS TestSuiteTestCase;
CREATE TABLE TestSuiteTestCase ( testSuiteTestCaseId INT NOT NULL AUTO_INCREMENT, testSuiteId INT NOT NULL, testCaseVersionId INT NOT NULL, testCaseId INT NOT NULL, priorityId INT NOT NULL, runOrder INT NOT NULL, blocking TINYINT(1) NOT NULL, environmentProfileId INT, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, PRIMARY KEY (testSuiteTestCaseId), INDEX fk_TestSuiteTestCase_TestSuite1 (testSuiteId), INDEX fk_TestSuiteTestCase_TestCase (testCaseId), INDEX fk_TestSuiteTestCase_TestCaseVersion1 (testCaseVersionId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS User;
CREATE TABLE User ( userId INT NOT NULL AUTO_INCREMENT, password VARCHAR(255) NOT NULL, firstName VARCHAR(50) NOT NULL, lastName VARCHAR(50) NOT NULL, email VARCHAR(255) NOT NULL, code VARCHAR(255) NOT NULL, confirmedEmail TINYINT(1) NOT NULL, userStatusId INT NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, version INT DEFAULT '0' NOT NULL, environmentProfileId INT, companyId INT DEFAULT '-22222' NOT NULL, PRIMARY KEY (userId), CONSTRAINT IDX_Email UNIQUE (email), INDEX IDX_Profile_Id (environmentProfileId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into User (userId, password, firstName, lastName, email, code, confirmedEmail, userStatusId, createdBy, createDate, lastChangedBy, lastChangeDate, version, environmentProfileId, companyId) values (1, 'c7ad44cbad762a5da0a452f9e854fdc1e0e7a52a38015f23f3eab1d80b931dd472634dfac71cd34ebc35d16ab7fb8a90c81f975113d6c7538dc69dd8de9077ec', 'admin', 'admin', 'admin@utest.com', '824932435826086cd4faa8bd55812b730b2f43c9caea0720286a51cfa125667edd4e8b7cde5acc8c56b7500627798d47ce9599f1fc9acc2b2175818870c97372', '1', 1, 1, '2010-10-31 00:00:00', 1, '2010-11-24 20:13:31', 1, 7, -22222);
DROP TABLE IF EXISTS UserPreference;
CREATE TABLE UserPreference ( userId INT NOT NULL, preferenceId INT NOT NULL, PRIMARY KEY (userId, preferenceId), CONSTRAINT fk_UserPreference_Preference1 FOREIGN KEY (preferenceId) REFERENCES Preference (preferenceId) ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT fk_UserRole_User0 FOREIGN KEY (userId) REFERENCES User (userId) ON DELETE NO ACTION ON UPDATE NO ACTION, INDEX fk_UserPreference_Preference1 (preferenceId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Associates User and his preferences.';
DROP TABLE IF EXISTS UserRole;
CREATE TABLE UserRole ( userRoleId INT NOT NULL AUTO_INCREMENT, userId INT NOT NULL, accessRoleId INT NOT NULL, createdBy INT NOT NULL, createDate DATETIME NOT NULL, lastChangedBy INT NOT NULL, lastChangeDate DATETIME NOT NULL, PRIMARY KEY (userRoleId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into UserRole (userRoleId, userId, accessRoleId, createdBy, createDate, lastChangedBy, lastChangeDate) values (2, 1, 1, 1, '2010-11-24 20:24:33', 1, '2010-11-24 20:24:33');
DROP TABLE IF EXISTS UserStatus;
CREATE TABLE UserStatus ( userStatusId INT NOT NULL AUTO_INCREMENT, PRIMARY KEY (userStatusId) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into UserStatus (userStatusId) values (1);
insert into UserStatus (userStatusId) values (2);
insert into UserStatus (userStatusId) values (3);
DROP TABLE IF EXISTS UserStatusLocale;
CREATE TABLE UserStatusLocale ( userStatusId INT NOT NULL AUTO_INCREMENT, description VARCHAR(250) NOT NULL, sortOrder INT NOT NULL, localeCode VARCHAR(10) DEFAULT 'en_US' NOT NULL, PRIMARY KEY (userStatusId, localeCode), CONSTRAINT FK_UserStatus_Id FOREIGN KEY (userStatusId) REFERENCES UserStatus (userStatusId) ON DELETE NO ACTION ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
insert into UserStatusLocale (userStatusId, description, sortOrder, localeCode) values (1, 'Active', 0, 'en_US');
insert into UserStatusLocale (userStatusId, description, sortOrder, localeCode) values (2, 'Inactive', 0, 'en_US');
insert into UserStatusLocale (userStatusId, description, sortOrder, localeCode) values (3, 'Disabled', 0, 'en_US');
