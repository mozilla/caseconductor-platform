/*
Case Conductor is a Test Case Management system.
Copyright (C) 2011 uTest Inc.

This file is part of Case Conductor.

Case Conductor is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Case Conductor is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Case Conductor.  If not, see <http://www.gnu.org/licenses/>.

*/
/**
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * 
 * @author Vadim Kisen
 *
 * copyright 2010 by uTest 
 */
package com.utest.domain;

// Generated Sep 3, 2010 1:57:10 PM by Hibernate Tools 3.2.4.GA


/**
 * TestSuiteTestCase generated by hbm2java
 */
public class TestSuiteTestCase extends TimelineEntity implements EnvironmentDependable, TestCaseContainerDependable
{

	private Integer			testSuiteId;
	private TestCaseVersion	testCaseVersion;
	private Integer			testCaseVersionId;
	private Integer			testCaseId;
	private Integer			priorityId	= 0;
	private Integer			runOrder	= 0;
	private boolean			blocking	= false;
	private Integer			environmentProfileId;

	public TestSuiteTestCase()
	{
	}

	public TestSuiteTestCase(final Integer testSuiteId, final Integer testCaseVersionId, final Integer testCaseId, final Integer priorityId, final Integer runOrder,
			final boolean blocking)
	{
		super();
		this.testSuiteId = testSuiteId;
		this.testCaseVersionId = testCaseVersionId;
		this.testCaseId = testCaseId;
		this.priorityId = priorityId;
		this.runOrder = runOrder;
		this.blocking = blocking;
	}

	public TestSuiteTestCase(final Integer testSuiteId, final Integer testCaseVersionId, final Integer testCaseId, final Integer priorityId, final Integer runOrder,
			final boolean blocking, final Integer environmentProfileId)
	{
		super();
		this.testSuiteId = testSuiteId;
		this.testCaseVersionId = testCaseVersionId;
		this.testCaseId = testCaseId;
		this.priorityId = priorityId;
		this.runOrder = runOrder;
		this.blocking = blocking;
		this.environmentProfileId = environmentProfileId;
	}

	public Integer getTestSuiteId()
	{
		return this.testSuiteId;
	}

	public void setTestSuiteId(final Integer testSuiteId)
	{
		this.testSuiteId = testSuiteId;
	}

	public Integer getTestCaseVersionId()
	{
		return this.testCaseVersionId;
	}

	public void setTestCaseVersionId(final Integer testCaseVersionId)
	{
		this.testCaseVersionId = testCaseVersionId;
	}

	public Integer getTestCaseId()
	{
		return this.testCaseId;
	}

	public void setTestCaseId(final Integer testCaseId)
	{
		this.testCaseId = testCaseId;
	}

	public Integer getPriorityId()
	{
		return this.priorityId;
	}

	public void setPriorityId(final Integer priorityId)
	{
		this.priorityId = priorityId;
	}

	public Integer getRunOrder()
	{
		return this.runOrder;
	}

	public void setRunOrder(final Integer runOrder)
	{
		this.runOrder = runOrder;
	}

	public boolean isBlocking()
	{
		return this.blocking;
	}

	public void setBlocking(final boolean blocking)
	{
		this.blocking = blocking;
	}

	public Integer getEnvironmentProfileId()
	{
		return this.environmentProfileId;
	}

	public void setEnvironmentProfileId(final Integer environmentProfileId)
	{
		this.environmentProfileId = environmentProfileId;
	}

	public TestCaseVersion getTestCaseVersion()
	{
		return testCaseVersion;
	}

	@Override
	public Integer getTestCaseContainerId()
	{
		return testSuiteId;
	}

	@Override
	public void setTestCaseContainerId(Integer containerId)
	{
		testSuiteId = containerId;
	}

	public void setTestCaseVersion(TestCaseVersion testCaseVersion)
	{
		this.testCaseVersion = testCaseVersion;
	}
}
